type Device @aws_iam @aws_cognito_user_pools {
  name: String!
  imei: String!
  status: DeviceStatus
  id: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  owner: String
}

enum DeviceStatus {
  ACTIVE
  INACTIVE
}

input AmplifyAIConversationTurnErrorInput {
  errorType: String!
  message: String!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelDeviceConnection @aws_iam @aws_cognito_user_pools {
  items: [Device]!
  nextToken: String
}

input ModelDeviceStatusInput {
  eq: DeviceStatus
  ne: DeviceStatus
}

input ModelDeviceFilterInput {
  name: ModelStringInput
  imei: ModelStringInput
  status: ModelDeviceStatusInput
  id: ModelIDInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelDeviceFilterInput]
  or: [ModelDeviceFilterInput]
  not: ModelDeviceFilterInput
  owner: ModelStringInput
}

type Query {
  getDevice(id: ID!): Device @aws_iam @aws_cognito_user_pools
  listDevices(filter: ModelDeviceFilterInput, limit: Int, nextToken: String): ModelDeviceConnection @aws_iam @aws_cognito_user_pools
}

input ModelDeviceConditionInput {
  name: ModelStringInput
  imei: ModelStringInput
  status: ModelDeviceStatusInput
  and: [ModelDeviceConditionInput]
  or: [ModelDeviceConditionInput]
  not: ModelDeviceConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  owner: ModelStringInput
}

input CreateDeviceInput {
  name: String!
  imei: String!
  status: DeviceStatus
  id: ID
}

input UpdateDeviceInput {
  name: String
  imei: String
  status: DeviceStatus
  id: ID!
}

input DeleteDeviceInput {
  id: ID!
}

type Mutation {
  createDevice(input: CreateDeviceInput!, condition: ModelDeviceConditionInput): Device @aws_iam @aws_cognito_user_pools
  updateDevice(input: UpdateDeviceInput!, condition: ModelDeviceConditionInput): Device @aws_iam @aws_cognito_user_pools
  deleteDevice(input: DeleteDeviceInput!, condition: ModelDeviceConditionInput): Device @aws_iam @aws_cognito_user_pools
}

input ModelSubscriptionDeviceFilterInput {
  name: ModelSubscriptionStringInput
  imei: ModelSubscriptionStringInput
  status: ModelSubscriptionStringInput
  id: ModelSubscriptionIDInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionDeviceFilterInput]
  or: [ModelSubscriptionDeviceFilterInput]
  owner: ModelStringInput
}

type Subscription {
  onCreateDevice(filter: ModelSubscriptionDeviceFilterInput, owner: String): Device @aws_subscribe(mutations: ["createDevice"]) @aws_iam @aws_cognito_user_pools
  onUpdateDevice(filter: ModelSubscriptionDeviceFilterInput, owner: String): Device @aws_subscribe(mutations: ["updateDevice"]) @aws_iam @aws_cognito_user_pools
  onDeleteDevice(filter: ModelSubscriptionDeviceFilterInput, owner: String): Device @aws_subscribe(mutations: ["deleteDevice"]) @aws_iam @aws_cognito_user_pools
}
